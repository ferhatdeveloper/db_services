# EXFIN REST - Windows Server WSL2 Backend Kurulumu
# PowerShell'i y√∂netici olarak √ßalƒ±≈ütƒ±rƒ±n

Write-Host "üöÄ EXFIN REST - Windows Server WSL2 Kurulumu" -ForegroundColor Green
Write-Host "=============================================" -ForegroundColor Green
Write-Host ""

# 1. WSL2 kurulumu
Write-Host "[1/6] WSL2 kurulumu kontrol ediliyor..." -ForegroundColor Yellow

# WSL √∂zelliƒüini etkinle≈ütir
Write-Host "üì¶ WSL √∂zelliƒüi etkinle≈ütiriliyor..." -ForegroundColor Yellow
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart

# Virtual Machine Platform √∂zelliƒüini etkinle≈ütir
Write-Host "üñ•Ô∏è Virtual Machine Platform etkinle≈ütiriliyor..." -ForegroundColor Yellow
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart

Write-Host "‚úÖ WSL2 √∂zellikleri etkinle≈ütirildi" -ForegroundColor Green
Write-Host "‚ö†Ô∏è Bilgisayarƒ± yeniden ba≈ülatmanƒ±z gerekiyor!" -ForegroundColor Yellow

# 2. WSL2 kernel g√ºncellemesi
Write-Host "[2/6] WSL2 kernel g√ºncellemesi indiriliyor..." -ForegroundColor Yellow
$kernelUrl = "https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi"
$kernelPath = "$env:TEMP\wsl_update_x64.msi"

try {
    Invoke-WebRequest -Uri $kernelUrl -OutFile $kernelPath
    Write-Host "‚úÖ WSL2 kernel g√ºncellemesi indirildi" -ForegroundColor Green
    Write-Host "üì¶ Kernel g√ºncellemesi kuruluyor..." -ForegroundColor Yellow
    Start-Process msiexec.exe -Wait -ArgumentList "/i $kernelPath /quiet"
    Write-Host "‚úÖ WSL2 kernel g√ºncellemesi kuruldu" -ForegroundColor Green
} catch {
    Write-Host "‚ùå WSL2 kernel g√ºncellemesi indirilemedi" -ForegroundColor Red
    Write-Host "üì• Manuel olarak indirin: https://aka.ms/wsl2kernel" -ForegroundColor Cyan
}

# 3. Ubuntu kurulumu
Write-Host "[3/6] Ubuntu WSL2 daƒüƒ±tƒ±mƒ± kuruluyor..." -ForegroundColor Yellow
try {
    wsl --install -d Ubuntu
    Write-Host "‚úÖ Ubuntu WSL2 kuruldu" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Ubuntu kurulumu ba≈üarƒ±sƒ±z" -ForegroundColor Red
    Write-Host "üì• Manuel olarak kurun: wsl --install -d Ubuntu" -ForegroundColor Cyan
}

# 4. Chocolatey kurulumu
Write-Host "[4/6] Chocolatey kontrol ediliyor..." -ForegroundColor Yellow
if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
    Write-Host "üì¶ Chocolatey kuruluyor..." -ForegroundColor Yellow
    Set-ExecutionPolicy Bypass -Scope Process -Force
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
    Write-Host "‚úÖ Chocolatey: Kuruldu" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Chocolatey: Zaten kurulu" -ForegroundColor Green
}

# 5. Docker Desktop kurulumu
Write-Host "[5/6] Docker Desktop kontrol ediliyor..." -ForegroundColor Yellow
if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "üê≥ Docker Desktop kuruluyor..." -ForegroundColor Yellow
    choco install docker-desktop -y
    Write-Host "‚úÖ Docker Desktop: Kuruldu" -ForegroundColor Green
    Write-Host "‚ö†Ô∏è Docker Desktop'ƒ± ba≈ülatƒ±n ve WSL2 backend'i etkinle≈ütirin" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Docker Desktop: Zaten kurulu" -ForegroundColor Green
}

# 6. Proje dosyalarƒ±nƒ± hazƒ±rlama
Write-Host "[6/6] Proje dosyalarƒ± hazƒ±rlanƒ±yor..." -ForegroundColor Yellow

# Environment dosyasƒ±nƒ± kopyala
if (Test-Path "env.production.example") {
    if (-not (Test-Path ".env.production")) {
        Copy-Item "env.production.example" ".env.production"
        Write-Host "‚úÖ Environment dosyasƒ± olu≈üturuldu" -ForegroundColor Green
        Write-Host "üîê .env.production dosyasƒ±nƒ± d√ºzenleyin ve ≈üifreleri deƒüi≈ütirin" -ForegroundColor Yellow
    } else {
        Write-Host "‚úÖ Environment dosyasƒ± zaten mevcut" -ForegroundColor Green
    }
}

Write-Host ""
Write-Host "üéâ WSL2 Kurulumu tamamlandƒ±!" -ForegroundColor Green
Write-Host "=============================" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Sonraki adƒ±mlar:" -ForegroundColor Cyan
Write-Host "1. Bilgisayarƒ± yeniden ba≈ülatƒ±n" -ForegroundColor White
Write-Host "2. Docker Desktop'ƒ± ba≈ülatƒ±n" -ForegroundColor White
Write-Host "3. Docker Desktop Settings > General > Use WSL 2 based engine" -ForegroundColor White
Write-Host "4. .env.production dosyasƒ±nƒ± d√ºzenleyin" -ForegroundColor White
Write-Host "5. .\deploy-windows.ps1 komutunu √ßalƒ±≈ütƒ±rƒ±n" -ForegroundColor White
Write-Host ""
Write-Host "üîß Docker Desktop WSL2 Ayarlarƒ±:" -ForegroundColor Cyan
Write-Host "‚Ä¢ Settings > General > Use WSL 2 based engine" -ForegroundColor White
Write-Host "‚Ä¢ Settings > Resources > WSL Integration" -ForegroundColor White
Write-Host "‚Ä¢ Ubuntu'yu etkinle≈ütirin" -ForegroundColor White
Write-Host "" 